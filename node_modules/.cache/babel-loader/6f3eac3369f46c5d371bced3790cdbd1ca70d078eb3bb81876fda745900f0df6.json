{"ast":null,"code":"var _jsxFileName = \"/Users/leemartinc/Projects/bill-offset/src/pages/home.js\";\nimport React from 'react';\nimport '../css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  const daysBetween = (startDate, endDate) => {\n    // Calculating the difference in timestamps \n    var diff = new Date(endDate) - new Date(startDate);\n    // 1 day = 24 hours \n    // 24 * 60 * 60 * 1000 = 86400000 milliseconds \n    return Math.abs(Math.round(diff / 86400000));\n  };\n  var demarcationdate = new Date(\"04/01/2022\").toLocaleDateString();\n  var today = new Date().toLocaleDateString();\n  var days = daysBetween(demarcationdate, today);\n\n  //console.log(days);\n\n  var days_till = 14 - days % 14;\n  var rec = days % 14 == 0;\n  var next_1_pay_date = new Date().getTime() + days_till * 86400000;\n  var last_pay_date = new Date(next_1_pay_date - 14 * 86400000);\n  var last_2_pay_date = new Date(last_pay_date - 14 * 86400000);\n  var next_2_pay_date = new Date(next_1_pay_date + 14 * 86400000);\n  var next_3_pay_date = new Date(next_2_pay_date + 14 * 86400000);\n  var next_4_pay_date = new Date(next_3_pay_date + 14 * 86400000);\n  class Bill {\n    constructor(name, day, amount) {\n      this.name = name;\n      this.day = day;\n      this.amount = amount;\n    }\n  }\n  const rent = new Bill(\"Rent\", 1, 1700);\n  const spotify = new Bill(\"Spotify\", 9, 10);\n  const heroku = new Bill(\"Heroku\", 10, 7);\n  const oneMain = new Bill(\"OneMain Loan\", 20, 333);\n  const jag_repair_loan = new Bill(\"Jag Repair Loan\", 15, 476);\n  const car_insurance = new Bill(\"Car Insurance\", 22, 247);\n  const internet = new Bill(\"Internet\", 14, 96);\n  const bills = [rent, spotify, heroku, oneMain, jag_repair_loan, internet, car_note, car_insurance];\n  const RenderBillBox = () => {\n    let toDisplay = [];\n    //var date = new Date(clientOrders.timestamp); \n\n    toDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example-block\",\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this));\n    return toDisplay;\n  };\n  const billsForPayPeriod = (lastPaidDate, nextPaidDate) => {\n    var billsToPay = [];\n    var totalAmount = 0;\n    for (let bill of bills) {\n      if (new Date(lastPaidDate).getMonth() == new Date(nextPaidDate).getMonth()) {\n        if (bill.day >= new Date(lastPaidDate).getDate() && bill.day < new Date(nextPaidDate).getDate()) {\n          billsToPay.push(bill.name);\n          totalAmount += bill.amount;\n        }\n      } else if (new Date(lastPaidDate).getMonth() != new Date(nextPaidDate).getMonth()) {\n        if (bill.day >= new Date(lastPaidDate).getDate() || bill.day < new Date(nextPaidDate).getDate()) {\n          billsToPay.push(bill.name);\n          totalAmount += bill.amount;\n        }\n      }\n    }\n    billsToPay.push(totalAmount);\n    if (totalAmount > 2200) {\n      console.log(\"Bills are high this pay period\");\n    }\n    return billsToPay;\n  };\n  console.log(\"\\n Todays Date: \", today);\n  console.log(\"\\n\");\n  console.log(\"------------------------------------------------\");\n  console.log(\"\\n\");\n  let last_lastPayDate_array = billsForPayPeriod(last_2_pay_date, last_pay_date);\n  console.log(\"Date: \", last_2_pay_date.toLocaleDateString());\n  console.log(\"Bills to pay: \");\n  last_lastPayDate_array.forEach(function (item, index) {\n    if (last_lastPayDate_array.slice(-1)[0] != item) {\n      console.log(item + \", \");\n    }\n  });\n  console.log(\"Total: \", last_lastPayDate_array.slice(-1)[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: \"Todays Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"easy-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 1\n  }, this);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Home","daysBetween","startDate","endDate","diff","Date","Math","abs","round","demarcationdate","toLocaleDateString","today","days","days_till","rec","next_1_pay_date","getTime","last_pay_date","last_2_pay_date","next_2_pay_date","next_3_pay_date","next_4_pay_date","Bill","constructor","name","day","amount","rent","spotify","heroku","oneMain","jag_repair_loan","car_insurance","internet","bills","car_note","RenderBillBox","toDisplay","push","billsForPayPeriod","lastPaidDate","nextPaidDate","billsToPay","totalAmount","bill","getMonth","getDate","console","log","last_lastPayDate_array","forEach","item","index","slice"],"sources":["/Users/leemartinc/Projects/bill-offset/src/pages/home.js"],"sourcesContent":["import React from 'react';\n\nimport '../css/styles.css';\n\nfunction Home() {\n\n    const daysBetween = (startDate, endDate) => {\n        // Calculating the difference in timestamps \n        var diff = new Date(endDate) - new Date(startDate); \n        // 1 day = 24 hours \n        // 24 * 60 * 60 * 1000 = 86400000 milliseconds \n        return Math.abs(Math.round(diff / 86400000));\n    } \n    \n    var demarcationdate = new Date(\"04/01/2022\").toLocaleDateString();\n    var today = new Date().toLocaleDateString();\n    var days = daysBetween(demarcationdate, today);\n    \n    //console.log(days);\n    \n    var days_till = 14 - days % 14;\n    var rec = days % 14 == 0;\n    \n    var next_1_pay_date = new Date().getTime() + (days_till * 86400000);\n    var last_pay_date = new Date(next_1_pay_date - (14 * 86400000));\n    var last_2_pay_date = new Date(last_pay_date - (14 * 86400000));\n    var next_2_pay_date = new Date(next_1_pay_date + (14 * 86400000));\n    var next_3_pay_date = new Date(next_2_pay_date + (14 * 86400000));\n    var next_4_pay_date = new Date(next_3_pay_date + (14 * 86400000));\n\n    class Bill {\n        constructor(name, day, amount) {\n            this.name = name;\n            this.day = day;\n            this.amount = amount;\n        }\n    }\n    \n    const rent = new Bill(\"Rent\", 1, 1700);\n    const spotify = new Bill(\"Spotify\", 9, 10);\n    const heroku = new Bill(\"Heroku\", 10, 7);\n    const oneMain = new Bill(\"OneMain Loan\", 20, 333);\n    const jag_repair_loan = new Bill(\"Jag Repair Loan\", 15, 476);\n    const car_insurance = new Bill(\"Car Insurance\", 22, 247);\n    const internet = new Bill(\"Internet\", 14, 96);\n    \n    const bills = [rent, spotify, heroku, oneMain, jag_repair_loan, internet, car_note, car_insurance];\n    \n\n\n\n    const RenderBillBox = () => {\n\n        let toDisplay = []\n        //var date = new Date(clientOrders.timestamp); \n\n        toDisplay.push(\n            <div className=\"example-block\">test</div>\n        )\n\n\n        return toDisplay\n\n    }\n\n    const billsForPayPeriod = (lastPaidDate, nextPaidDate) => {\n        var billsToPay = [];\n        var totalAmount = 0;\n    \n        for (let bill of bills) {\n            if (new Date(lastPaidDate).getMonth() == new Date(nextPaidDate).getMonth()) {\n                if (bill.day >= new Date(lastPaidDate).getDate() && bill.day < new Date(nextPaidDate).getDate()) {\n                    billsToPay.push(bill.name);\n                    totalAmount += bill.amount;\n                }\n            } else if (new Date(lastPaidDate).getMonth() != new Date(nextPaidDate).getMonth()) {\n                if (bill.day >= new Date(lastPaidDate).getDate() || bill.day < new Date(nextPaidDate).getDate()) {\n                    billsToPay.push(bill.name);\n                    totalAmount += bill.amount;\n                }\n            }\n        }\n    \n        billsToPay.push(totalAmount);\n    \n        if (totalAmount > 2200) {\n            console.log(\"Bills are high this pay period\");\n        }\n    \n        return billsToPay;\n    }\n\n\n    console.log(\"\\n Todays Date: \", today);\n\nconsole.log(\"\\n\");\nconsole.log(\"------------------------------------------------\");\nconsole.log(\"\\n\");\n\nlet last_lastPayDate_array = billsForPayPeriod(last_2_pay_date, last_pay_date );\n\nconsole.log(\"Date: \", last_2_pay_date.toLocaleDateString());\nconsole.log(\"Bills to pay: \");\nlast_lastPayDate_array.forEach(function(item, index){\n    if (last_lastPayDate_array.slice(-1)[0] != item){\n        console.log(item + \", \");\n    }\n});\nconsole.log(\"Total: \", last_lastPayDate_array.slice(-1)[0]);\n\n\n\n\n\n    \n\n\n    return (\n\n<div className=\"container\">\n   \n  <div className=\"top\">\n    Todays Date: \n  </div>\n  \n  <div className=\"easy-grid\">\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n  </div>\n</div>\n    );\n  }\n  \n  export default Home;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,mBAAmB;AAAC;AAE3B,SAASC,IAAI,GAAG;EAEZ,MAAMC,WAAW,GAAG,CAACC,SAAS,EAAEC,OAAO,KAAK;IACxC;IACA,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC,GAAG,IAAIE,IAAI,CAACH,SAAS,CAAC;IAClD;IACA;IACA,OAAOI,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACJ,IAAI,GAAG,QAAQ,CAAC,CAAC;EAChD,CAAC;EAED,IAAIK,eAAe,GAAG,IAAIJ,IAAI,CAAC,YAAY,CAAC,CAACK,kBAAkB,EAAE;EACjE,IAAIC,KAAK,GAAG,IAAIN,IAAI,EAAE,CAACK,kBAAkB,EAAE;EAC3C,IAAIE,IAAI,GAAGX,WAAW,CAACQ,eAAe,EAAEE,KAAK,CAAC;;EAE9C;;EAEA,IAAIE,SAAS,GAAG,EAAE,GAAGD,IAAI,GAAG,EAAE;EAC9B,IAAIE,GAAG,GAAGF,IAAI,GAAG,EAAE,IAAI,CAAC;EAExB,IAAIG,eAAe,GAAG,IAAIV,IAAI,EAAE,CAACW,OAAO,EAAE,GAAIH,SAAS,GAAG,QAAS;EACnE,IAAII,aAAa,GAAG,IAAIZ,IAAI,CAACU,eAAe,GAAI,EAAE,GAAG,QAAS,CAAC;EAC/D,IAAIG,eAAe,GAAG,IAAIb,IAAI,CAACY,aAAa,GAAI,EAAE,GAAG,QAAS,CAAC;EAC/D,IAAIE,eAAe,GAAG,IAAId,IAAI,CAACU,eAAe,GAAI,EAAE,GAAG,QAAS,CAAC;EACjE,IAAIK,eAAe,GAAG,IAAIf,IAAI,CAACc,eAAe,GAAI,EAAE,GAAG,QAAS,CAAC;EACjE,IAAIE,eAAe,GAAG,IAAIhB,IAAI,CAACe,eAAe,GAAI,EAAE,GAAG,QAAS,CAAC;EAEjE,MAAME,IAAI,CAAC;IACPC,WAAW,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAE;MAC3B,IAAI,CAACF,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,MAAM,GAAGA,MAAM;IACxB;EACJ;EAEA,MAAMC,IAAI,GAAG,IAAIL,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC;EACtC,MAAMM,OAAO,GAAG,IAAIN,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;EAC1C,MAAMO,MAAM,GAAG,IAAIP,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;EACxC,MAAMQ,OAAO,GAAG,IAAIR,IAAI,CAAC,cAAc,EAAE,EAAE,EAAE,GAAG,CAAC;EACjD,MAAMS,eAAe,GAAG,IAAIT,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAE,GAAG,CAAC;EAC5D,MAAMU,aAAa,GAAG,IAAIV,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,GAAG,CAAC;EACxD,MAAMW,QAAQ,GAAG,IAAIX,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC;EAE7C,MAAMY,KAAK,GAAG,CAACP,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,eAAe,EAAEE,QAAQ,EAAEE,QAAQ,EAAEH,aAAa,CAAC;EAKlG,MAAMI,aAAa,GAAG,MAAM;IAExB,IAAIC,SAAS,GAAG,EAAE;IAClB;;IAEAA,SAAS,CAACC,IAAI,eACV;MAAK,SAAS,EAAC,eAAe;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,CAC5C;IAGD,OAAOD,SAAS;EAEpB,CAAC;EAED,MAAME,iBAAiB,GAAG,CAACC,YAAY,EAAEC,YAAY,KAAK;IACtD,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,WAAW,GAAG,CAAC;IAEnB,KAAK,IAAIC,IAAI,IAAIV,KAAK,EAAE;MACpB,IAAI,IAAI7B,IAAI,CAACmC,YAAY,CAAC,CAACK,QAAQ,EAAE,IAAI,IAAIxC,IAAI,CAACoC,YAAY,CAAC,CAACI,QAAQ,EAAE,EAAE;QACxE,IAAID,IAAI,CAACnB,GAAG,IAAI,IAAIpB,IAAI,CAACmC,YAAY,CAAC,CAACM,OAAO,EAAE,IAAIF,IAAI,CAACnB,GAAG,GAAG,IAAIpB,IAAI,CAACoC,YAAY,CAAC,CAACK,OAAO,EAAE,EAAE;UAC7FJ,UAAU,CAACJ,IAAI,CAACM,IAAI,CAACpB,IAAI,CAAC;UAC1BmB,WAAW,IAAIC,IAAI,CAAClB,MAAM;QAC9B;MACJ,CAAC,MAAM,IAAI,IAAIrB,IAAI,CAACmC,YAAY,CAAC,CAACK,QAAQ,EAAE,IAAI,IAAIxC,IAAI,CAACoC,YAAY,CAAC,CAACI,QAAQ,EAAE,EAAE;QAC/E,IAAID,IAAI,CAACnB,GAAG,IAAI,IAAIpB,IAAI,CAACmC,YAAY,CAAC,CAACM,OAAO,EAAE,IAAIF,IAAI,CAACnB,GAAG,GAAG,IAAIpB,IAAI,CAACoC,YAAY,CAAC,CAACK,OAAO,EAAE,EAAE;UAC7FJ,UAAU,CAACJ,IAAI,CAACM,IAAI,CAACpB,IAAI,CAAC;UAC1BmB,WAAW,IAAIC,IAAI,CAAClB,MAAM;QAC9B;MACJ;IACJ;IAEAgB,UAAU,CAACJ,IAAI,CAACK,WAAW,CAAC;IAE5B,IAAIA,WAAW,GAAG,IAAI,EAAE;MACpBI,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IACjD;IAEA,OAAON,UAAU;EACrB,CAAC;EAGDK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAErC,KAAK,CAAC;EAE1CoC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjBD,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;EAC/DD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAEjB,IAAIC,sBAAsB,GAAGV,iBAAiB,CAACrB,eAAe,EAAED,aAAa,CAAE;EAE/E8B,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE9B,eAAe,CAACR,kBAAkB,EAAE,CAAC;EAC3DqC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7BC,sBAAsB,CAACC,OAAO,CAAC,UAASC,IAAI,EAAEC,KAAK,EAAC;IAChD,IAAIH,sBAAsB,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIF,IAAI,EAAC;MAC5CJ,OAAO,CAACC,GAAG,CAACG,IAAI,GAAG,IAAI,CAAC;IAC5B;EACJ,CAAC,CAAC;EACFJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,sBAAsB,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EASvD,oBAEJ;IAAK,SAAS,EAAC,WAAW;IAAA,wBAExB;MAAK,SAAS,EAAC,KAAK;MAAA,UAAC;IAErB;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,eACrC;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEJ;AAAC,KAtIMrD,IAAI;AAwIX,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}