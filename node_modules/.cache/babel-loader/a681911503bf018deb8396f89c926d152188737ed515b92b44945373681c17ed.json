{"ast":null,"code":"var _jsxFileName = \"/Users/leemartinc/Projects/bill-offset/src/pages/home.js\";\nimport React from 'react';\nimport '../css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  const daysBetween = (startDate, endDate) => {\n    // Calculating the difference in timestamps \n    var diff = new Date(endDate) - new Date(startDate);\n    // 1 day = 24 hours \n    // 24 * 60 * 60 * 1000 = 86400000 milliseconds \n    return Math.abs(Math.round(diff / 86400000));\n  };\n  var demarcationdate = new Date(\"04/01/2022\").toLocaleDateString();\n  var today = new Date().toLocaleDateString();\n  var days = daysBetween(demarcationdate, today);\n\n  //console.log(days);\n\n  var days_till = 14 - days % 14;\n  var rec = days % 14 == 0;\n  var next_1_pay_date = new Date().getTime() + days_till * 86400000;\n  var last_pay_date = new Date(next_1_pay_date - 14 * 86400000);\n  var last_2_pay_date = new Date(last_pay_date - 14 * 86400000);\n  var next_2_pay_date = new Date(next_1_pay_date + 14 * 86400000);\n  var next_3_pay_date = new Date(next_2_pay_date + 14 * 86400000);\n  var next_4_pay_date = new Date(next_3_pay_date + 14 * 86400000);\n  const RenderBillBox = () => {\n    let toDisplay = [];\n    //var date = new Date(clientOrders.timestamp); \n\n    toDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example-block\",\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this));\n    return toDisplay;\n  };\n  const billsForPayPeriod = (lastPaidDate, nextPaidDate) => {\n    var billsToPay = [];\n    var totalAmount = 0;\n    for (let bill of bills) {\n      if (new Date(lastPaidDate).getMonth() == new Date(nextPaidDate).getMonth()) {\n        if (bill.day >= new Date(lastPaidDate).getDate() && bill.day < new Date(nextPaidDate).getDate()) {\n          billsToPay.push(bill.name);\n          totalAmount += bill.amount;\n        }\n      } else if (new Date(lastPaidDate).getMonth() != new Date(nextPaidDate).getMonth()) {\n        if (bill.day >= new Date(lastPaidDate).getDate() || bill.day < new Date(nextPaidDate).getDate()) {\n          billsToPay.push(bill.name);\n          totalAmount += bill.amount;\n        }\n      }\n    }\n    billsToPay.push(totalAmount);\n    if (totalAmount > 2200) {\n      console.log(\"Bills are high this pay period\");\n    }\n    return billsToPay;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: \"Todays Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"easy-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\",\n        children: [previousDate.toString(), \" \", prev_paid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\",\n        children: [nextDate.toString(), \" \", paid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\",\n        children: [nextFutureDate.toString(), \" \", to_be_paid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\",\n        children: [nextFutureDate_future.toString(), \" \", future_to_be_paid2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 1\n  }, this);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Home","daysBetween","startDate","endDate","diff","Date","Math","abs","round","demarcationdate","toLocaleDateString","today","days","days_till","rec","next_1_pay_date","getTime","last_pay_date","last_2_pay_date","next_2_pay_date","next_3_pay_date","next_4_pay_date","RenderBillBox","toDisplay","push","billsForPayPeriod","lastPaidDate","nextPaidDate","billsToPay","totalAmount","bill","bills","getMonth","day","getDate","name","amount","console","log","previousDate","toString","prev_paid","nextDate","paid","nextFutureDate","to_be_paid","nextFutureDate_future","future_to_be_paid2"],"sources":["/Users/leemartinc/Projects/bill-offset/src/pages/home.js"],"sourcesContent":["import React from 'react';\n\nimport '../css/styles.css';\n\nfunction Home() {\n\n    const daysBetween = (startDate, endDate) => {\n        // Calculating the difference in timestamps \n        var diff = new Date(endDate) - new Date(startDate); \n        // 1 day = 24 hours \n        // 24 * 60 * 60 * 1000 = 86400000 milliseconds \n        return Math.abs(Math.round(diff / 86400000));\n    } \n    \n    var demarcationdate = new Date(\"04/01/2022\").toLocaleDateString();\n    var today = new Date().toLocaleDateString();\n    var days = daysBetween(demarcationdate, today);\n    \n    //console.log(days);\n    \n    var days_till = 14 - days % 14;\n    var rec = days % 14 == 0;\n    \n    var next_1_pay_date = new Date().getTime() + (days_till * 86400000);\n    var last_pay_date = new Date(next_1_pay_date - (14 * 86400000));\n    var last_2_pay_date = new Date(last_pay_date - (14 * 86400000));\n    var next_2_pay_date = new Date(next_1_pay_date + (14 * 86400000));\n    var next_3_pay_date = new Date(next_2_pay_date + (14 * 86400000));\n    var next_4_pay_date = new Date(next_3_pay_date + (14 * 86400000));\n\n\n\n    const RenderBillBox = () => {\n\n        let toDisplay = []\n        //var date = new Date(clientOrders.timestamp); \n\n        toDisplay.push(\n            <div className=\"example-block\">test</div>\n        )\n\n\n        return toDisplay\n\n    }\n\n    const billsForPayPeriod = (lastPaidDate, nextPaidDate) => {\n        var billsToPay = [];\n        var totalAmount = 0;\n    \n        for (let bill of bills) {\n            if (new Date(lastPaidDate).getMonth() == new Date(nextPaidDate).getMonth()) {\n                if (bill.day >= new Date(lastPaidDate).getDate() && bill.day < new Date(nextPaidDate).getDate()) {\n                    billsToPay.push(bill.name);\n                    totalAmount += bill.amount;\n                }\n            } else if (new Date(lastPaidDate).getMonth() != new Date(nextPaidDate).getMonth()) {\n                if (bill.day >= new Date(lastPaidDate).getDate() || bill.day < new Date(nextPaidDate).getDate()) {\n                    billsToPay.push(bill.name);\n                    totalAmount += bill.amount;\n                }\n            }\n        }\n    \n        billsToPay.push(totalAmount);\n    \n        if (totalAmount > 2200) {\n            console.log(\"Bills are high this pay period\");\n        }\n    \n        return billsToPay;\n    }\n    \n\n\n    return (\n\n<div className=\"container\">\n   \n  <div className=\"top\">\n    Todays Date: \n  </div>\n  \n  <div className=\"easy-grid\">\n    <div className=\"example-block\">{previousDate.toString()} {prev_paid}</div>\n    <div className=\"example-block\">{nextDate.toString()} {paid}</div>\n    <div className=\"example-block\">{nextFutureDate.toString()} {to_be_paid}</div>\n    <div className=\"example-block\">{nextFutureDate_future.toString()} {future_to_be_paid2}</div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n    <div className=\"example-block\"></div>\n  </div>\n</div>\n    );\n  }\n  \n  export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}