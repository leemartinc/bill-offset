{"ast":null,"code":"var _jsxFileName = \"/Users/leemartinc/Projects/bill-offset/src/pages/home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [payPeriods, setPayPeriods] = useState([]);\n  useEffect(() => {\n    getPayPeriods(3, 3);\n  }, []);\n  const daysBetween = (startDate, endDate) => {\n    // Calculating the difference in timestamps \n    var diff = new Date(endDate) - new Date(startDate);\n    // 1 day = 24 hours \n    // 24 * 60 * 60 * 1000 = 86400000 milliseconds \n    return Math.abs(Math.round(diff / 86400000));\n  };\n  var demarcationdate = new Date(\"04/01/2022\").toLocaleDateString();\n  var today = new Date().toLocaleDateString();\n  var days = daysBetween(demarcationdate, today);\n\n  //console.log(today);\n\n  var days_till = 14 - days % 14;\n  var rec = days % 14 == 0;\n  var next_1_pay_date = new Date().getTime() + days_till * 86400000;\n  var last_pay_date = new Date(next_1_pay_date - 14 * 86400000);\n  var last_2_pay_date = new Date(last_pay_date - 14 * 86400000);\n  var next_2_pay_date = new Date(next_1_pay_date + 14 * 86400000);\n  var next_3_pay_date = new Date(next_2_pay_date + 14 * 86400000);\n  var next_4_pay_date = new Date(next_3_pay_date + 14 * 86400000);\n  const getPayPeriods = (periodsBack, periodsForward) => {\n    var payPeriods = [];\n    var today = new Date().toLocaleDateString();\n    var days = daysBetween(demarcationdate, today);\n    var days_till_next_pay = 14 - days % 14;\n    let next_pay_date_fromToday = new Date().getTime() + days_till_next_pay * 86400000;\n    //var last_pay_date = new Date(next_1_pay_date - (14 * 86400000));\n\n    //console.log(new Date(test).toLocaleDateString());\n\n    //Handles future pay periods\n    if (periodsForward === 1) {\n      let date_computation = new Date().getTime() + days_till_next_pay * 86400000;\n      payPeriods.push(date_computation);\n    } else if (periodsForward > 1) {\n      let date_computation = new Date().getTime() + days_till_next_pay * 86400000;\n      payPeriods.push(date_computation);\n      for (let i = 1; i <= periodsForward; i++) {\n        //console.log(new Date(payPeriods[i-1]).getTime());\n        date_computation = payPeriods[i - 1] + 14 * 86400000;\n        payPeriods.push(date_computation);\n      }\n    }\n\n    //Handles past pay periods\n    if (periodsBack === 1) {\n      let date_computation = next_pay_date_fromToday - 14 * 86400000;\n      payPeriods.unshift(date_computation);\n    } else if (periodsBack > 1) {\n      let date_computation = next_pay_date_fromToday - 14 * 86400000;\n      payPeriods.unshift(date_computation);\n      for (let i = 1; i <= periodsBack; i++) {\n        //console.log(new Date(payPeriods[i-1]).getTime());\n        date_computation = payPeriods[0] - 14 * 86400000;\n        payPeriods.unshift(date_computation);\n      }\n    }\n    for (let date in payPeriods) {\n      //console.log(\"##############\")\n      //console.log(date)\n      console.log(new Date(payPeriods[date]).toLocaleDateString());\n    }\n    //console.log(payPeriods);\n    setPayPeriods(payPeriods);\n  };\n  class Bill {\n    constructor(name, day, amount) {\n      this.name = name;\n      this.day = day;\n      this.amount = amount;\n    }\n  }\n  const rent = new Bill(\"Rent\", 1, 1700);\n  const spotify = new Bill(\"Spotify\", 9, 10);\n  const heroku = new Bill(\"Heroku\", 10, 7);\n  const oneMain = new Bill(\"OneMain Loan\", 20, 333);\n  const jag_repair_loan = new Bill(\"Jag Repair Loan\", 15, 476);\n  const car_insurance = new Bill(\"Car Insurance\", 22, 247);\n  const internet = new Bill(\"Internet\", 14, 96);\n  const car_note = new Bill(\"Car Note\", 20, 1000);\n  const bills = [rent, spotify, heroku, oneMain, jag_repair_loan, internet, car_note, car_insurance];\n  const RenderBillBox = () => {\n    if (Object.keys(payPeriods).length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this);\n    } else {\n      let toDisplay = [];\n      for (let i = 0; i < payPeriods.length / 2; i++) {\n        let bills = billsForPayPeriod(payPeriods[i], payPeriods[i + 1]);\n        console.log(bills);\n        toDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-block\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [new Date(payPeriods[i]).toLocaleDateString(), \" - \", new Date(payPeriods[i + 1]).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this));\n      }\n      return toDisplay;\n    }\n  };\n  const billsForPayPeriod = (lastPaidDate, nextPaidDate) => {\n    var billsToPay = [];\n    var totalAmount = 0;\n    for (let bill of bills) {\n      if (new Date(lastPaidDate).getMonth() == new Date(nextPaidDate).getMonth()) {\n        if (bill.day >= new Date(lastPaidDate).getDate() && bill.day < new Date(nextPaidDate).getDate()) {\n          billsToPay.push(bill.name);\n          totalAmount += bill.amount;\n        }\n      } else if (new Date(lastPaidDate).getMonth() != new Date(nextPaidDate).getMonth()) {\n        if (bill.day >= new Date(lastPaidDate).getDate() || bill.day < new Date(nextPaidDate).getDate()) {\n          billsToPay.push(bill.name);\n          totalAmount += bill.amount;\n        }\n      }\n    }\n    billsToPay.push(totalAmount);\n    if (totalAmount > 2200) {\n      console.log(\"Bills are high this pay period\");\n    }\n    return billsToPay;\n  };\n  console.log(\"\\n Todays Date: \", today);\n  console.log(\"\\n\");\n  console.log(\"------------------------------------------------\");\n  console.log(\"\\n\");\n  let last_lastPayDate_array = billsForPayPeriod(last_2_pay_date, last_pay_date);\n  console.log(\"Date: \", last_2_pay_date.toLocaleDateString());\n  console.log(\"Bills to pay: \");\n  last_lastPayDate_array.forEach(function (item, index) {\n    if (last_lastPayDate_array.slice(-1)[0] != item) {\n      console.log(item + \", \");\n    }\n  });\n  console.log(\"Total: \", last_lastPayDate_array.slice(-1)[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [\"Todays Date: \", today]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"easy-grid\",\n      children: /*#__PURE__*/_jsxDEV(RenderBillBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 1\n  }, this);\n}\n_s(Home, \"defUgie7YyiXmG8weyvrRCl3M2Y=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Home","payPeriods","setPayPeriods","getPayPeriods","daysBetween","startDate","endDate","diff","Date","Math","abs","round","demarcationdate","toLocaleDateString","today","days","days_till","rec","next_1_pay_date","getTime","last_pay_date","last_2_pay_date","next_2_pay_date","next_3_pay_date","next_4_pay_date","periodsBack","periodsForward","days_till_next_pay","next_pay_date_fromToday","date_computation","push","i","unshift","date","console","log","Bill","constructor","name","day","amount","rent","spotify","heroku","oneMain","jag_repair_loan","car_insurance","internet","car_note","bills","RenderBillBox","Object","keys","length","toDisplay","billsForPayPeriod","lastPaidDate","nextPaidDate","billsToPay","totalAmount","bill","getMonth","getDate","last_lastPayDate_array","forEach","item","index","slice"],"sources":["/Users/leemartinc/Projects/bill-offset/src/pages/home.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport '../css/styles.css';\n\nfunction Home() {\n\n    const [payPeriods, setPayPeriods] = useState([]);\n\n    useEffect(() => {\n        getPayPeriods(3,3);\n    },[]);\n\n    const daysBetween = (startDate, endDate) => {\n        // Calculating the difference in timestamps \n        var diff = new Date(endDate) - new Date(startDate); \n        // 1 day = 24 hours \n        // 24 * 60 * 60 * 1000 = 86400000 milliseconds \n        return Math.abs(Math.round(diff / 86400000));\n    } \n    \n    var demarcationdate = new Date(\"04/01/2022\").toLocaleDateString();\n    var today = new Date().toLocaleDateString();\n    var days = daysBetween(demarcationdate, today);\n    \n    //console.log(today);\n    \n    var days_till = 14 - days % 14;\n    var rec = days % 14 == 0;\n    \n    var next_1_pay_date = new Date().getTime() + (days_till * 86400000);\n    var last_pay_date = new Date(next_1_pay_date - (14 * 86400000));\n    var last_2_pay_date = new Date(last_pay_date - (14 * 86400000));\n    var next_2_pay_date = new Date(next_1_pay_date + (14 * 86400000));\n    var next_3_pay_date = new Date(next_2_pay_date + (14 * 86400000));\n    var next_4_pay_date = new Date(next_3_pay_date + (14 * 86400000));\n\n    const getPayPeriods = (periodsBack, periodsForward) => {\n        var payPeriods = [];\n        var today = new Date().toLocaleDateString();\n        var days = daysBetween(demarcationdate, today);\n        var days_till_next_pay = 14 - days % 14;\n\n        let next_pay_date_fromToday = new Date().getTime() + (days_till_next_pay * 86400000);\n        //var last_pay_date = new Date(next_1_pay_date - (14 * 86400000));\n\n        //console.log(new Date(test).toLocaleDateString());\n\n        //Handles future pay periods\n        if (periodsForward === 1){\n            let date_computation = new Date().getTime() + (days_till_next_pay * 86400000);\n            payPeriods.push(date_computation);\n        }else if(periodsForward > 1){\n            let date_computation = new Date().getTime() + (days_till_next_pay * 86400000);\n            payPeriods.push(date_computation);\n            for (let i = 1; i <= periodsForward; i++){\n                //console.log(new Date(payPeriods[i-1]).getTime());\n                date_computation = payPeriods[i-1] + (14 * 86400000);\n                payPeriods.push(date_computation);\n            }\n        }\n\n        //Handles past pay periods\n        if (periodsBack === 1){\n            let date_computation = next_pay_date_fromToday - (14 * 86400000);\n            payPeriods.unshift(date_computation);\n        }else if(periodsBack > 1){\n            let date_computation = next_pay_date_fromToday - (14 * 86400000);\n            payPeriods.unshift(date_computation);\n            for (let i = 1; i <= periodsBack; i++){\n                //console.log(new Date(payPeriods[i-1]).getTime());\n                date_computation = payPeriods[0] - (14 * 86400000);\n                payPeriods.unshift(date_computation);\n            }\n        }\n\n\n        for(let date in payPeriods){\n            //console.log(\"##############\")\n            //console.log(date)\n            console.log(new Date(payPeriods[date]).toLocaleDateString());\n        }\n        //console.log(payPeriods);\n        setPayPeriods(payPeriods);\n\n        \n\n    }\n\n    \n\n\n\n\n    class Bill {\n        constructor(name, day, amount) {\n            this.name = name;\n            this.day = day;\n            this.amount = amount;\n        }\n    }\n    \n    const rent = new Bill(\"Rent\", 1, 1700);\n    const spotify = new Bill(\"Spotify\", 9, 10);\n    const heroku = new Bill(\"Heroku\", 10, 7);\n    const oneMain = new Bill(\"OneMain Loan\", 20, 333);\n    const jag_repair_loan = new Bill(\"Jag Repair Loan\", 15, 476);\n    const car_insurance = new Bill(\"Car Insurance\", 22, 247);\n    const internet = new Bill(\"Internet\", 14, 96);\n    const car_note = new Bill(\"Car Note\", 20, 1000);\n    \n    const bills = [rent, spotify, heroku, oneMain, jag_repair_loan, internet, car_note, car_insurance];\n    \n\n\n\n    const RenderBillBox = () => {\n\n        if(Object.keys(payPeriods).length===0){\n            return(\n                <div>Loading...</div>\n            )\n        }else{\n\n            let toDisplay = []\n            for(let i = 0; i < payPeriods.length/2; i++){\n                let bills = billsForPayPeriod(payPeriods[i], payPeriods[i+1] );\n                console.log(bills);\n                toDisplay.push(\n                    <div className=\"example-block\">\n                       <table>\n                            <th>\n                                <td>{new Date(payPeriods[i]).toLocaleDateString()} - {new Date(payPeriods[i+1]).toLocaleDateString()}</td>\n                            </th>\n                       </table>\n                    </div>\n                )\n            }\n\n            return toDisplay\n        }\n\n       \n\n    }\n\n    const billsForPayPeriod = (lastPaidDate, nextPaidDate) => {\n        var billsToPay = [];\n        var totalAmount = 0;\n    \n        for (let bill of bills) {\n            if (new Date(lastPaidDate).getMonth() == new Date(nextPaidDate).getMonth()) {\n                if (bill.day >= new Date(lastPaidDate).getDate() && bill.day < new Date(nextPaidDate).getDate()) {\n                    billsToPay.push(bill.name);\n                    totalAmount += bill.amount;\n                }\n            } else if (new Date(lastPaidDate).getMonth() != new Date(nextPaidDate).getMonth()) {\n                if (bill.day >= new Date(lastPaidDate).getDate() || bill.day < new Date(nextPaidDate).getDate()) {\n                    billsToPay.push(bill.name);\n                    totalAmount += bill.amount;\n                }\n            }\n        }\n    \n        billsToPay.push(totalAmount);\n    \n        if (totalAmount > 2200) {\n            console.log(\"Bills are high this pay period\");\n        }\n    \n        return billsToPay;\n    }\n\n\n    console.log(\"\\n Todays Date: \", today);\n\nconsole.log(\"\\n\");\nconsole.log(\"------------------------------------------------\");\nconsole.log(\"\\n\");\n\nlet last_lastPayDate_array = billsForPayPeriod(last_2_pay_date, last_pay_date );\n\nconsole.log(\"Date: \", last_2_pay_date.toLocaleDateString());\nconsole.log(\"Bills to pay: \");\nlast_lastPayDate_array.forEach(function(item, index){\n    if (last_lastPayDate_array.slice(-1)[0] != item){\n        console.log(item + \", \");\n    }\n});\nconsole.log(\"Total: \", last_lastPayDate_array.slice(-1)[0]);\n\n\n\n\n\n    \n\n\n    return (\n\n<div className=\"container\">\n   \n  <div className=\"top\">\n    Todays Date: {today}\n  </div>\n  \n  <div className=\"easy-grid\">\n    <RenderBillBox />\n  </div>\n</div>\n    );\n  }\n  \n  export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}